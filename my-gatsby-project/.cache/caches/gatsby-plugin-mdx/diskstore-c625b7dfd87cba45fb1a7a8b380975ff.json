{"expireTime":9007200864273550000,"key":"gatsby-plugin-mdx-entire-payload-86ec5cbe601320e67d057d5a65be37ec-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { Input, Button } from 'antd'","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":37,"offset":37},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"A mix of Markdown, Frontmatter and JSX","position":{"start":{"line":4,"column":3,"offset":41},"end":{"line":4,"column":41,"offset":79},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":39},"end":{"line":4,"column":41,"offset":79},"indent":[]}},{"type":"jsx","value":"<div style={{ display:\"grid\", gridGap:\"10px\", maxWidth:\"450px\" }}>","position":{"start":{"line":6,"column":1,"offset":81},"end":{"line":6,"column":67,"offset":147},"indent":[]}},{"type":"jsx","value":"<div style={{ background: '#1890ff33', padding: '5px', borderRadius: '5px' }}>\n  hello world\n</div>","position":{"start":{"line":8,"column":1,"offset":149},"end":{"line":10,"column":7,"offset":248},"indent":[1,1]}},{"type":"jsx","value":"  <Input placeholder=\"First name\" />\n  <Button type=\"primary\">click me</Button>","position":{"start":{"line":12,"column":1,"offset":250},"end":{"line":13,"column":43,"offset":329},"indent":[1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":15,"column":1,"offset":331},"end":{"line":15,"column":7,"offset":337},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"MDX\",\"root\":\"/docs\",\"parents\":[\"Get Started\"]}","position":{"start":{"line":18,"column":1,"offset":340},"end":{"line":18,"column":85,"offset":424},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":18,"column":85,"offset":424}}},"scopeImports":["import { Input, Button } from 'antd'","import * as React from 'react'"],"scopeIdentifiers":["Input","Button","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MDX\",\n  \"root\": \"/docs\",\n  \"parents\": [\"Get Started\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"a-mix-of-markdown-frontmatter-and-jsx\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#a-mix-of-markdown-frontmatter-and-jsx\",\n    \"aria-label\": \"a mix of markdown frontmatter and jsx permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"A mix of Markdown, Frontmatter and JSX\"), mdx(\"div\", {\n    style: {\n      display: \"grid\",\n      gridGap: \"10px\",\n      maxWidth: \"450px\"\n    }\n  }, mdx(\"div\", {\n    style: {\n      background: '#1890ff33',\n      padding: '5px',\n      borderRadius: '5px'\n    }\n  }, \"hello world\"), mdx(Input, {\n    placeholder: \"First name\",\n    mdxType: \"Input\"\n  }), mdx(Button, {\n    type: \"primary\",\n    mdxType: \"Button\"\n  }, \"click me\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport { Input, Button } from 'antd'\nexport const _frontmatter = {\n  \"title\": \"MDX\",\n  \"root\": \"/docs\",\n  \"parents\": [\"Get Started\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"a-mix-of-markdown-frontmatter-and-jsx\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#a-mix-of-markdown-frontmatter-and-jsx\",\n        \"aria-label\": \"a mix of markdown frontmatter and jsx permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`A mix of Markdown, Frontmatter and JSX`}</h1>\n    <div style={{\n      display: \"grid\",\n      gridGap: \"10px\",\n      maxWidth: \"450px\"\n    }}>\n      <div style={{\n        background: '#1890ff33',\n        padding: '5px',\n        borderRadius: '5px'\n      }}>\n  hello world\n      </div>\n  <Input placeholder=\"First name\" mdxType=\"Input\" />\n  <Button type=\"primary\" mdxType=\"Button\">click me</Button>\n    </div>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}